var areaJSON='{"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[3.24701, 1.67031, 1.67328, 2.95197, 1.11111], "total":[26852, 62455, 346, 64, 216], "name":"Kernel System", "max_resources":[1866240, 3732480, 11721, 5760, 93312], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[13132, 20030, 112, 0, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[4121, 5284, 0, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect."}, {"type":"brief", "text":"For 2 global loads and 1 global store."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}]}]}, {"name":"System description ROM", "type":"resource", "data":[2, 71, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"sreaming_saxpy", "compute_units":1, "type":"function", "total_percent":[1.72039, 0.745724, 0.993173, 1.97935, 1.11111], "total_kernel_resources":[9597, 37070, 232, 64, 216], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1463, 1467, 0, 0, 6], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Private Variable: \\n - \'i\' (axpy.cl:34)", "type":"resource", "data":[16, 130, 0, 0, 0], "debug":[[{"filename":"axpy.cl", "line":34}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32"}, {"type":"text", "text":"1 register of width 33"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width,\\n1 reg, 33 width"}]}, {"name":"sreaming_saxpy.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[0, 165, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[0, 131, 0, 0, 0]}, {"name":"axpy.cl:34", "type":"resource", "data":[0, 34, 0, 0, 0], "debug":[[{"filename":"axpy.cl", "line":34}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[9, 9, 1, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"axpy.cl:31", "type":"resource", "data":[64, 0, 0, 0, 0], "debug":[[{"filename":"axpy.cl", "line":31}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[64, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"axpy.cl:34", "type":"resource", "data":[84, 1, 0, 0, 0], "debug":[[{"filename":"axpy.cl", "line":34}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":2, "data":[35, 1, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[16, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"sreaming_saxpy.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[78, 4540, 5, 0, 4], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[78, 4540, 5, 0, 4]}]}, {"name":"Feedback", "type":"resource", "data":[49, 9, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"axpy.cl:34", "type":"resource", "data":[49, 9, 0, 0, 0], "debug":[[{"filename":"axpy.cl", "line":34}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[1177, 2327, 58, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"axpy.cl:34", "type":"resource", "data":[105, 0, 0, 0, 0], "debug":[[{"filename":"axpy.cl", "line":34}]], "children":[{"name":"1-bit And", "type":"resource", "count":2, "data":[2, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"33-bit Select", "type":"resource", "count":2, "data":[27, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"axpy.cl:39", "type":"resource", "data":[5946, 21938, 108, 64, 206], "debug":[[{"filename":"axpy.cl", "line":39}]], "children":[{"name":"Hardened Floating-Point Multiply-Add", "type":"resource", "count":64, "data":[4096, 8192, 0, 64, 0]}, {"name":"Load", "type":"resource", "count":2, "data":[1850, 13746, 108, 0, 206], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"axpy.cl:44", "type":"resource", "data":[606, 6484, 60, 0, 0], "debug":[[{"filename":"axpy.cl", "line":44}]], "children":[{"name":"Store", "type":"resource", "count":1, "data":[606, 6484, 60, 0, 0], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}]}]}]}]}';
var area_srcJSON='{"children":[{"children":[{"data":[13132,20030,112,0,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[4121,5284,0,0,0],"details":[{"text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect.","type":"text"},{"text":"For 2 global loads and 1 global store.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[2,71,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[1235,2345,59,0,0],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1463,1467,0,0,6],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[16,130,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32","type":"text"},{"text":"1 register of width 33","type":"text"},{"text":"Register,\\n1 reg, 32 width,\\n1 reg, 33 width","type":"brief"}],"name":"Private Variable: \\n - \'i\' (axpy.cl:34)","type":"resource"},{"children":[{"count":2,"data":[78,4671,5,0,4],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"}],"data":[78,4671,5,0,4],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[0,34,0,0,0],"debug":[[{"filename":"axpy.cl","line":34}]],"name":"State","type":"resource"},{"count":2,"data":[35,1,0,0,0],"debug":[[{"filename":"axpy.cl","line":34}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[16,0,0,0,0],"debug":[[{"filename":"axpy.cl","line":34}]],"name":"32-bit Select","type":"resource"},{"count":2,"data":[66,0,0,0,0],"debug":[[{"filename":"axpy.cl","line":34}]],"name":"33-bit Integer Add","type":"resource"},{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"axpy.cl","line":34}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"axpy.cl","line":34}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"axpy.cl","line":34}]],"name":"33-bit Integer Compare","type":"resource"},{"count":2,"data":[27,0,0,0,0],"debug":[[{"filename":"axpy.cl","line":34}]],"name":"33-bit Select","type":"resource"}],"data":[189,35,0,0,0],"debug":[[{"filename":"axpy.cl","line":34}]],"name":"axpy.cl:34","type":"resource"},{"children":[{"count":2,"data":[64,0,0,0,0],"debug":[[{"filename":"axpy.cl","line":31}]],"name":"32-bit Integer Add","type":"resource"}],"data":[64,0,0,0,0],"debug":[[{"filename":"axpy.cl","line":31}]],"name":"axpy.cl:31","replace_name":"true","type":"resource"},{"children":[{"count":64,"data":[4096,8192,0,64,0],"debug":[[{"filename":"axpy.cl","line":39}]],"name":"Hardened Floating-Point Multiply-Add","type":"resource"},{"count":2,"data":[1850,13746,108,0,206],"debug":[[{"filename":"axpy.cl","line":39}]],"name":"Load","type":"resource"}],"data":[5946,21938,108,64,206],"debug":[[{"filename":"axpy.cl","line":39}]],"name":"axpy.cl:39","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[606,6484,60,0,0],"debug":[[{"filename":"axpy.cl","line":44}]],"name":"Store","type":"resource"}],"data":[606,6484,60,0,0],"debug":[[{"filename":"axpy.cl","line":44}]],"name":"axpy.cl:44","replace_name":"true","type":"resource"}],"compute_units":1,"data":[9597,37070,232,64,216],"debug":[[{"filename":"axpy.cl","line":34}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"brief"}],"name":"sreaming_saxpy","total_kernel_resources":[9597,37070,232,64,216],"total_percent":[1.72039,0.745724,0.993173,1.97935,1.11111],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[13720,42425,234,64,216],"debug_enabled":"true","max_resources":[1866240,3732480,11721,5760,93312],"name":"Kernel System","total":[26852,62455,346,64,216],"total_percent":[3.24701,1.67031,1.67328,2.95197,1.11111],"type":"module"}';
var mavJSON='{"nodes":[{"type":"kernel", "id":2, "name":"sreaming_saxpy", "children":[{"type":"bb", "id":3, "name":"sreaming_saxpy.B0", "details":[{"type":"table", "Latency":"36"}]}, {"type":"bb", "id":4, "name":"sreaming_saxpy.B1", "children":[{"type":"inst", "id":6, "name":"Load", "debug":[[{"filename":"axpy.cl", "line":39}]], "details":[{"type":"table", "Width":"2048 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"39", "Latency":"512", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":7, "name":"Load", "debug":[[{"filename":"axpy.cl", "line":39}]], "details":[{"type":"table", "Width":"2048 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"39", "Latency":"512", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":8, "name":"Store", "debug":[[{"filename":"axpy.cl", "line":44}]], "details":[{"type":"table", "Width":"2048 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"589", "Latency":"64", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":9, "name":"Loop Input", "debug":[[{"filename":"axpy.cl", "line":34}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"10"}]}, {"type":"inst", "id":10, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"653", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"653", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":5, "name":"sreaming_saxpy.B2", "details":[{"type":"table", "Latency":"0"}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":11, "name":"DDR", "details":[{"type":"table", "Number of banks":"1"}]}]}], "links":[{"from":3, "to":9}, {"from":6, "to":10}, {"from":7, "to":10}, {"from":8, "to":10}, {"from":10, "to":5}, {"from":9, "to":6}, {"from":9, "to":7}, {"from":6, "to":8}, {"from":7, "to":8}, {"from":11, "to":6}, {"from":11, "to":7}, {"from":8, "to":11}]}';
var loopsJSON='{"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: sreaming_saxpy", "data":["", "", ""], "debug":[[{"filename":"axpy.cl", "line":23}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"sreaming_saxpy.B1", "data":["Yes", "~1", "4"], "debug":[[{"filename":"axpy.cl", "line":34}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: enabled."}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"axpy.cl", "line":"39"}]}, {"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"axpy.cl", "line":"39"}]}, {"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"axpy.cl", "line":"44"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"axpy.cl", "line":38}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"axpy.cl", "line":43}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}]}';
var fmax_iiJSON='{"basicblocks":{"sreaming_saxpy.B0":{"name":"sreaming_saxpy.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":36, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "sreaming_saxpy.B1":{"name":"sreaming_saxpy.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":653, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"axpy.cl", "line":"34"}]}]}}, "sreaming_saxpy.B2":{"name":"sreaming_saxpy.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}}, "functions":{"sreaming_saxpy":{"debug":[{"filename":"axpy.cl", "line":23}], "loop_hierachy":{"sreaming_saxpy__no_loop":["sreaming_saxpy.B0", "sreaming_saxpy.B2"], "sreaming_saxpy.B1":["sreaming_saxpy.B1"]}}}}';
var summaryJSON='{"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units", "Hyper-Optimized Handshaking"], "children":[{"name":"sreaming_saxpy", "data":["Single work-item", "No", [1, 1, 1], 1, "On"], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"axpy.cl", "line":23}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"sreaming_saxpy", "data":[9597, 37070, 232, 64, 216], "debug":[[{"filename":"axpy.cl", "line":23}]]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[4121, 5284, 0, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[13132, 20030, 112, 0, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[2, 71, 2, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[26852, 62455, 346, 64, 216], "data_percent":[1.43883, 1.67328, 2.95197, 1.11111]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[1866240, 3732480, 11721, 5760, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[]}}';
var infoJSON='{"name":"Info","rows":[{"classes":["info-table"],"data":["axpy_GX"],"name":"Project Name"},{"data":["Stratix 10, 1SG280LU3F50E1VGS1, s10_ref:s10gx"],"name":"Target Family, Device, Board"},{"data":["19.3.0 Build 222"],"name":"AOC Version"},{"data":["19.3.0 Build 222 Pro"],"name":"Quartus Version"},{"data":["aoc -profile=all -board-package=/opt/intelFPGA_pro/BSPs/s10_ref axpy.cl -o axpy_GX.aocx"],"name":"Command"},{"data":["Wed Oct 14 14:10:22 2020"],"name":"Reports Generated At"}]}';
var warningsJSON='{"rows":[]}';
var quartusJSON='{"quartusFitClockSummary":{"children":[{"details":[{"text":"This section contains a summary of the area and f<sub>MAX</sub> data generated by compiling the kernels through Quartus. \\nTo generate the data, run a Quartus compile on the project created for this design. \\nTo run the Quartus compile, please run command without flag -c, -rtl or -march=emulator","type":"text"}],"name":"Run Quartus compile to populate this section. See details for more information."}],"name":"Quartus Fit Summary"}}';
var fileJSON=[{"path":"/home/angelica/Documents/exm_GX/AXPY/axpy.cl", "name":"axpy.cl", "has_active_debug_locs":false, "absName":"/home/angelica/Documents/exm_GX/AXPY/axpy.cl", "content":"/*  FBLAS: BLAS implementation for Intel FPGA\012    Copyright (c) 2019 ETH-Zurich. All rights reserved.\012    See LICENSE for license information.\012    AXPY constant times a vector plus a vector.\012    Streamed version: data is received from two input streams\012    CHANNEL_VECTOR_X and CHANNEL_VECTOR_Y having the proper type.\012    Data elements must be streamed with a padding equal to W\012    (padding data must be set to zero).\012    Result is streamed in an output channel at the end of the computation\012    in a channel CHANNEL_OUT\012*/\012\012\012//FBLAS_PARAMETERS_START\012\012#define DOUBLE_PRECISION  //enable for daxpy\012#define W 64		    //width: number of multiplications performed per clock cycle\012\012//namings\012#define KERNEL_NAME sreaming_saxpy\012\012\012__kernel void KERNEL_NAME(\012						__global const float* restrict VECTOR_X,\012						__global const float* restrict VECTOR_Y,\012						__global  float* restrict VECTOR_OUT,\012						const float alpha, \012						int N)\012{\012\012    const int outer_loop_limit=1+(int)((N-1)/W); //ceiling\012    float res[W];\012\012    for(int i=0; i<outer_loop_limit; i++)\012    {\012        //receive W elements from the input channels\012        #pragma unroll\012        for(int j=0;j<W;j++)\012            res[j]=alpha* VECTOR_X[i*W + j] + VECTOR_Y[i*W+ j];\012\012        //sends the data to a writer\012        #pragma unroll\012        for(int j=0; j<W; j++)\012            VECTOR_OUT[i*W + j] = res[j];\012    }\012\012}\012"}];